// Automatically generated file. DO NOT MODIFY
//
// This file is generated by device/asus/Z010D/setup-makefiles.sh

soong_namespace {
}

cc_prebuilt_library_shared {
	name: "libloc_api_v02",
	owner: "asus",
	strip: {
		none: true,
	},
	target: {
		android_arm: {
			srcs: ["proprietary/lib/libloc_api_v02.so"],
		},
		android_arm64: {
			srcs: ["proprietary/lib64/libloc_api_v02.so"],
		},
	},
	compile_multilib: "both",
	check_elf_files: false,
	prefer: true,
	soc_specific: true,
}


cc_prebuilt_library_shared {
	name: "libdiag",
	owner: "asus",
	strip: {
		none: true,
	},
	target: {
		android_arm: {
			srcs: ["proprietary/vendor/lib/libdiag.so"],
		},
		android_arm64: {
			srcs: ["proprietary/vendor/lib64/libdiag.so"],
		},
	},
	compile_multilib: "both",
	check_elf_files: false,
	prefer: true,
	soc_specific: true,
}

cc_prebuilt_library_shared {
	name: "libdsutils",
	owner: "asus",
	strip: {
		none: true,
	},
	target: {
		android_arm: {
			srcs: ["proprietary/vendor/lib/libdsutils.so"],
		},
		android_arm64: {
			srcs: ["proprietary/vendor/lib64/libdsutils.so"],
		},
	},
	compile_multilib: "both",
	check_elf_files: false,
	prefer: true,
	soc_specific: true,
}

cc_prebuilt_library_shared {
	name: "libidl",
	owner: "asus",
	strip: {
		none: true,
	},
	target: {
		android_arm: {
			srcs: ["proprietary/vendor/lib/libidl.so"],
		},
		android_arm64: {
			srcs: ["proprietary/vendor/lib64/libidl.so"],
		},
	},
	compile_multilib: "both",
	check_elf_files: false,
	prefer: true,
	soc_specific: true,
}

cc_prebuilt_library_shared {
	name: "libqmi_cci",
	owner: "asus",
	strip: {
		none: true,
	},
	target: {
		android_arm: {
			srcs: ["proprietary/vendor/lib/libqmi_cci.so"],
		},
		android_arm64: {
			srcs: ["proprietary/vendor/lib64/libqmi_cci.so"],
		},
	},
	compile_multilib: "both",
	check_elf_files: false,
	prefer: true,
	soc_specific: true,
}

cc_prebuilt_library_shared {
	name: "libqmi_client_qmux",
	owner: "asus",
	strip: {
		none: true,
	},
	target: {
		android_arm: {
			srcs: ["proprietary/vendor/lib/libqmi_client_qmux.so"],
		},
		android_arm64: {
			srcs: ["proprietary/vendor/lib64/libqmi_client_qmux.so"],
		},
	},
	compile_multilib: "both",
	check_elf_files: false,
	prefer: true,
	soc_specific: true,
}

cc_prebuilt_library_shared {
	name: "libqmiservices",
	owner: "asus",
	strip: {
		none: true,
	},
	target: {
		android_arm: {
			srcs: ["proprietary/vendor/lib/libqmiservices.so"],
		},
		android_arm64: {
			srcs: ["proprietary/vendor/lib64/libqmiservices.so"],
		},
	},
	compile_multilib: "both",
	check_elf_files: false,
	prefer: true,
	soc_specific: true,
}

cc_prebuilt_library_shared {
	name: "libmdmdetect",
	owner: "asus",
	strip: {
		none: true,
	},
	target: {
		android_arm: {
			srcs: ["proprietary/vendor/lib/libmdmdetect.so"],
		},
		android_arm64: {
			srcs: ["proprietary/vendor/lib64/libmdmdetect.so"],
		},
	},
	compile_multilib: "both",
	check_elf_files: false,
	prefer: true,
	soc_specific: true,
}

cc_prebuilt_library_shared {
	name: "libmm-abl",
	owner: "asus",
	strip: {
		none: true,
	},
	target: {
		android_arm: {
			srcs: ["proprietary/vendor/lib/libmm-abl.so"],
		},
		android_arm64: {
			srcs: ["proprietary/vendor/lib64/libmm-abl.so"],
		},
	},
	compile_multilib: "both",
	check_elf_files: false,
	prefer: true,
	soc_specific: true,
}

cc_prebuilt_library_shared {
	name: "libtime_genoff",
	owner: "asus",
	strip: {
		none: true,
	},
	target: {
		android_arm: {
			srcs: ["proprietary/vendor/lib/libtime_genoff.so"],
		},
		android_arm64: {
			srcs: ["proprietary/vendor/lib64/libtime_genoff.so"],
		},
	},
	compile_multilib: "both",
	check_elf_files: false,
	prefer: true,
	soc_specific: true,
}

android_app_import {
	name: "shutdownlistener",
	owner: "asus",
	apk: "proprietary/app/shutdownlistener/shutdownlistener.apk",
	certificate: "platform",
	dex_preopt: {
		enabled: false,
	},
	privileged: true,
}

android_app_import {
	name: "TimeService",
	owner: "asus",
	apk: "proprietary/app/TimeService/TimeService.apk",
	certificate: "platform",
	dex_preopt: {
		enabled: false,
	},
	privileged: true,
}

android_app_import {
	name: "CNEService",
	owner: "asus",
	apk: "proprietary/priv-app/CNEService/CNEService.apk",
	certificate: "platform",
	dex_preopt: {
		enabled: false,
	},
	privileged: true,
}

android_app_import {
	name: "qcrilmsgtunnel",
	owner: "asus",
	apk: "proprietary/priv-app/qcrilmsgtunnel/qcrilmsgtunnel.apk",
	certificate: "platform",
	dex_preopt: {
		enabled: false,
	},
	privileged: true,
}

android_app_import {
	name: "QtiTetherService",
	owner: "asus",
	apk: "proprietary/priv-app/QtiTetherService/QtiTetherService.apk",
	certificate: "platform",
	dex_preopt: {
		enabled: false,
	},
	privileged: true,
}

android_app_import {
	name: "colorservice",
	owner: "asus",
	apk: "proprietary/vendor/app/colorservice/colorservice.apk",
	certificate: "platform",
	dex_preopt: {
		enabled: false,
	},
	soc_specific: true,
}

cc_prebuilt_library_shared {
	name: "vendor.qti.hardware.fm@1.0",
	owner: "asus",
	strip: {
		none: true,
	},
	target: {
		android_arm: {
			srcs: ["proprietary/lib/vendor.qti.hardware.fm@1.0.so"],
		},
		android_arm64: {
			srcs: ["proprietary/lib64/vendor.qti.hardware.fm@1.0.so"],
		},
	},
	compile_multilib: "both",
	check_elf_files: false,
	prefer: true,
	soc_specific: true,
}

android_app_import {
	name: "ims",
	owner: "asus",
	apk: "proprietary/vendor/app/ims/ims.apk",
	certificate: "platform",
	dex_preopt: {
		enabled: false,
	},
	soc_specific: true,
}

android_app_import {
	name: "imssettings",
	owner: "asus",
	apk: "proprietary/vendor/app/imssettings/imssettings.apk",
	certificate: "platform",
	dex_preopt: {
		enabled: false,
	},
	soc_specific: true,
}

dex_import {
	name: "imscmlibrary",
	owner: "asus",
	jars: ["proprietary/framework/imscmlibrary.jar"],
}

# AsusCamera
android_app_import {
	name: "AsusCamera",
	owner: "asus",
	apk: "proprietary/priv-app/AsusCamera/AsusCamera.apk",
	certificate: "platform",
	dex_preopt: {
		enabled: false,
	},
	privileged: true,
}

android_app_import {
	name: "AsusGallery",
	owner: "asus",
	apk: "proprietary/priv-app/AsusGallery/AsusGallery.apk",
	certificate: "platform",
	dex_preopt: {
		enabled: false,
	},
	privileged: true,
}

